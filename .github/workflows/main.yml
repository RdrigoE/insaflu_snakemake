name: CI

on:
  push:
    branches: [main, master]

  pull_request:
    branches:
      - master
  workflow_dispatch:
  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: 3.8
    
    - name: Install Snakemake and snakefmt
      shell: bash -l {0}
      run: |
        sudo apt install git build-essential zlib1g-dev
        conda env create --name insaflu --file config/insaflu.yaml
        conda activate insaflu
        conda install -n base -c conda-forge mamba
        conda install -n insaflu -c bioconda snakefmt
    
    # - name: Lint with snakefmt
    #   shell: bash -l {0}
    #   run: |
    #     conda activate insaflu
    #     snakefmt --in-place workflow/Snakefile workflow/rules
    #     snakefmt --check workflow/Snakefile workflow/rules
    #
    - name: Execute Snakemake Snippy SARS-CoV-2
      shell: bash -l {0}
      run: |
        conda activate insaflu
        snakemake --cores 1 --use-conda

        # New step to compare the generated files to expected outputs
    - name: Validate output files snippy SARS-CoV-2
      run: |
        # Compute checksums for the generated files
        sha256sum results/samples/demo_ont_1/trimmed_reads/nano_demo_ont_1.trimmed.fastq.gz >> output_snippy_sars.txt
        sha256sum results/samples/demo_illumina_1/trimmed_reads/demo_illumina_1_1.trimmed.fastq.gz >> output_snippy_sars.txt
        sha256sum results/samples/demo_illumina_1/trimmed_reads/demo_illumina_1_2.trimmed.fastq.gz >> output_snippy_sars.txt
        sha256sum results/align_samples/demo_illumina_1/snippy/demo_illumina_1_consensus.fasta >> output_snippy_sars.txt
        sha256sum results/align_samples/demo_ont_1/medaka/demo_ont_1_consensus.fasta >> output_snippy_sars.txt
        sha256sum results/projects/snippy_project/main_result/Alignment_nt_All.fasta >> output_snippy_sars.txt
        sha256sum results/projects/snippy_project/main_result/coverage_translate.csv >> output_snippy_sars.txt
        diff output_snippy_sars.txt .test_expected/expected_snippy_sars.txt

    - name: Execute Snakemake iVar SARS-CoV-2
      shell: bash -l {0}
      run: |
        sed -i 's/project/project_i/' config/constants.yaml 
        conda activate insaflu
        snakemake --cores 1 --use-conda

    - name: Validate output files iVar SARS-CoV-2
      run: |
        # Compute checksums for the generated files
        sha256sum results/samples/demo_ont_1/trimmed_reads/nano_demo_ont_1.trimmed.fastq.gz >> output_ivar_sars.txt
        sha256sum results/samples/demo_illumina_1/trimmed_reads/demo_illumina_1_1.trimmed.fastq.gz >> output_ivar_sars.txt
        sha256sum results/samples/demo_illumina_1/trimmed_reads/demo_illumina_1_2.trimmed.fastq.gz >> output_ivar_sars.txt
        sha256sum results/align_samples/demo_illumina_1/iVar/demo_illumina_1_consensus.fasta >> output_ivar_sars.txt
        sha256sum results/projects/iVar_project/main_result/coverage_translate.csv >> output_ivar_sars.txt
        sha256sum results/projects/iVar_project/main_result/Alignment_nt_All.fasta >> output_ivar_sars.txt

        diff output_ivar_sars.txt .test_expected/expected_ivar_sars.txt

    - name: Execute Snakemake iVar Influenza
      shell: bash -l {0}
      run: |
        sed -i 's/project_i.yaml/influenza.yaml/' config/constants.yaml 
        sed -i 's/samples.csv/influenza.csv/' config/constants.yaml 
        conda activate insaflu
        snakemake --cores 1 --use-conda

    - name: Validate output files snippy influenza
      run: |
        # Compute checksums for the generated files
        sha256sum results/samples/influenza_01/trimmed_reads/influenza_01_1.trimmed.fastq.gz >> output_snippy_influenza.txt
        sha256sum results/samples/influenza_01/trimmed_reads/influenza_01_2.trimmed.fastq.gz >> output_snippy_influenza.txt
        sha256sum results/align_samples/influenza_01/snippy/influenza_01_consensus.fasta >> output_snippy_influenza.txt
        sha256sum results/projects/influenza_snippy/main_result/Alignment_nt_All.fasta >> output_snippy_influenza.txt
        sha256sum results/projects/influenza_snippy/main_result/coverage_translate.csv >> output_snippy_influenza.txt
        diff output_snippy_influenza.txt .test_expected/expected_snippy_influenza.txt

    # Need the primers
    # - name: Execute Snakemake iVar Influenza
    #   shell: bash -l {0}
    #   run: |
    #     sed s/snippy/iVar/g user/influenza.yaml > user/influenza.yaml
    #     conda activate insaflu
    #     snakemake --cores 1 --use-conda
    #
    # - name: Validate output files iVar influenza
    #   run: |
    #     # Compute checksums for the generated files
    #     sha256sum results/samples/influenza_01/trimmed_reads/influenza_01_1.trimmed.fastq.gz >> output_ivar_influenza.txt
    #     sha256sum results/samples/influenza_01/trimmed_reads/influenza_01_2.trimmed.fastq.gz >> output_ivar_influenza.txt
    #     sha256sum results/align_samples/influenza_01/iVar/influenza_01_consensus.fasta >> output_ivar_influenza.txt
    #     sha256sum results/projects/iVar_project/main_result/coverage_translate.csv >> output_ivar_influenza.txt
    #     sha256sum results/projects/iVar_project/main_result/Alignment_nt_All.fasta >> output_ivar_influenza.txt
    #
    #     diff output_ivar_influenza.txt .test_expected/expected_ivar_influenza.txt
    #



